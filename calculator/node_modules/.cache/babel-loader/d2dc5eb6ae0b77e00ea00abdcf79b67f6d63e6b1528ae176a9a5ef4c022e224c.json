{"ast":null,"code":"var _jsxFileName = \"/Users/radekchlud/Desktop/JS code/Calculator/calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport History from './History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst doubleOperators = ['+', '-', '/', '*', '.'];\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [calcHistory, setCalcHistory] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3500/history');\n        const data = await response.json();\n        setCalcHistory(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const doubleOperatorCheck = character => {\n    const lastInputCharacter = input.split('').pop();\n    console.log(lastInputCharacter);\n    const checkCondition = doubleOperators.includes(lastInputCharacter) && doubleOperators.includes(character);\n    if (!checkCondition) {\n      setInput(input + character);\n    }\n  };\n  const calculationFunction = inputString => {\n    const lastInputCharacter = input === null || input === void 0 ? void 0 : input.split('').pop();\n    const checkCondition = doubleOperators.includes(lastInputCharacter);\n    if (!checkCondition) {\n      let result = Function(`return ${inputString}`)();\n      setInput(`${result}`);\n    }\n  };\n  const addHistoryRecord = i => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"base\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"F9ckWeHh7IpYyhoPUoQC67k0ESY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","History","jsxDEV","_jsxDEV","Fragment","_Fragment","doubleOperators","App","_s","input","setInput","calcHistory","setCalcHistory","fetchData","response","fetch","data","json","error","console","doubleOperatorCheck","character","lastInputCharacter","split","pop","log","checkCondition","includes","calculationFunction","inputString","result","Function","addHistoryRecord","i","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/radekchlud/Desktop/JS code/Calculator/calculator/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport History from './History';\n\nconst doubleOperators = ['+','-','/','*','.']\n\nfunction App() {\n  const [input,setInput] = useState('')\n  const [calcHistory,setCalcHistory] = useState('')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3500/history');\n        const data = await response.json();\n        setCalcHistory(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const doubleOperatorCheck = (character) => {\n    const lastInputCharacter = input.split('').pop()\n    console.log(lastInputCharacter)\n    const checkCondition = doubleOperators.includes(lastInputCharacter) && doubleOperators.includes(character)\n    if(!checkCondition){\n      setInput(input+character)\n    }\n  }\n\n  const calculationFunction = (inputString) => {\n    const lastInputCharacter = input?.split('').pop()\n    const checkCondition = doubleOperators.includes(lastInputCharacter)\n    if(!checkCondition){\n      let result = Function(`return ${inputString}`)()\n      setInput(`${result}`)\n    }\n  }\n\n  const addHistoryRecord = (i) => {\n  }\n\n  return (\n    <>\n    <div id=\"base\">\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,eAAe,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACW,WAAW,EAACC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,cAAc,CAACI,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,mBAAmB,GAAIC,SAAS,IAAK;IACzC,MAAMC,kBAAkB,GAAGb,KAAK,CAACc,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC;IAChDL,OAAO,CAACM,GAAG,CAACH,kBAAkB,CAAC;IAC/B,MAAMI,cAAc,GAAGpB,eAAe,CAACqB,QAAQ,CAACL,kBAAkB,CAAC,IAAIhB,eAAe,CAACqB,QAAQ,CAACN,SAAS,CAAC;IAC1G,IAAG,CAACK,cAAc,EAAC;MACjBhB,QAAQ,CAACD,KAAK,GAACY,SAAS,CAAC;IAC3B;EACF,CAAC;EAED,MAAMO,mBAAmB,GAAIC,WAAW,IAAK;IAC3C,MAAMP,kBAAkB,GAAGb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC;IACjD,MAAME,cAAc,GAAGpB,eAAe,CAACqB,QAAQ,CAACL,kBAAkB,CAAC;IACnE,IAAG,CAACI,cAAc,EAAC;MACjB,IAAII,MAAM,GAAGC,QAAQ,CAAE,UAASF,WAAY,EAAC,CAAC,CAAC,CAAC;MAChDnB,QAAQ,CAAE,GAAEoB,MAAO,EAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIC,CAAC,IAAK,CAChC,CAAC;EAED,oBACE9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACA/B,OAAA;MAAKgC,EAAE,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET;EAAC,gBACJ,CAAC;AAEP;AAAC/B,EAAA,CA7CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}