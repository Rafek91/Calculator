{"ast":null,"code":"var _jsxFileName = \"/Users/radekchlud/Desktop/JS code/Calculator/calculator/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst History = _ref => {\n  _s();\n  let {\n    addHistoryRecord\n  } = _ref;\n  const [content, setContent] = useState([]);\n  const databaseURL = \"http://localhost:3500/history\";\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${databaseURL}?_limit=10`);\n        const data = await response.json();\n        setContent(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [addHistoryRecord]);\n  if (content.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"history-content\",\n      children: content.map(record => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: record.value\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(History, \"gRb/xpZ2tFPFe5xJrmrGOH9fIlI=\");\n_c = History;\nconst App = () => {\n  _s2();\n  const [input, setInput] = useState('');\n  const addHistoryRecord = async newRecord => {\n    try {\n      const response = await fetch(databaseURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newRecord)\n      });\n      if (response.ok) {\n        console.log('Ok');\n      } else {\n        console.error('Failed');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const doubleOperatorCheck = character => {\n    const lastInputCharacter = input.split('').pop();\n    const checkCondition = doubleOperators.includes(lastInputCharacter) && doubleOperators.includes(character);\n    if (!checkCondition) {\n      setInput(input + character);\n    }\n  };\n  const calculationFunction = inputString => {\n    const lastInputCharacter = input === null || input === void 0 ? void 0 : input.split('').pop();\n    const checkCondition = doubleOperators.includes(lastInputCharacter);\n    if (!checkCondition) {\n      let result = Function(`return ${inputString}`)();\n      setInput(`${result}`);\n      const newHistoryRecord = {\n        value: `${inputString}=${result}`\n      };\n      addHistoryRecord(newHistoryRecord);\n    }\n  };\n  const clearInput = () => {\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"calculator\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                id: \"calc-result\",\n                children: input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: clearInput,\n                id: \"calc-clear\",\n                children: \"c\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  doubleOperatorCheck(1);\n                },\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  doubleOperatorCheck(2);\n                },\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  doubleOperatorCheck(3);\n                },\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  doubleOperatorCheck('+');\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"history-container\",\n        children: /*#__PURE__*/_jsxDEV(History, {\n          addHistoryRecord: addHistoryRecord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s2(App, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"History\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","History","_ref","_s","addHistoryRecord","content","setContent","databaseURL","fetchData","response","fetch","data","json","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","record","value","_c","App","_s2","input","setInput","newRecord","method","headers","body","JSON","stringify","ok","log","doubleOperatorCheck","character","lastInputCharacter","split","pop","checkCondition","doubleOperators","includes","calculationFunction","inputString","result","Function","newHistoryRecord","clearInput","colSpan","onClick","_c2","$RefreshReg$"],"sources":["/Users/radekchlud/Desktop/JS code/Calculator/calculator/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst History = ({ addHistoryRecord }) => {\n  const [content, setContent] = useState([]);\n  const databaseURL = \"http://localhost:3500/history\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${databaseURL}?_limit=10`);\n        const data = await response.json();\n        setContent(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [addHistoryRecord]);\n\n  if (content.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <h1>History</h1>\n      <div id='history-content'>\n        {content.map((record) => (\n          <p key={record.id}>{record.value}</p>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst App = () => {\n  const [input, setInput] = useState('');\n\n  const addHistoryRecord = async (newRecord) => {\n    try {\n      const response = await fetch(databaseURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newRecord)\n      });\n      if (response.ok) {\n        console.log('Ok');\n      } else {\n        console.error('Failed');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const doubleOperatorCheck = (character) => {\n    const lastInputCharacter = input.split('').pop();\n    const checkCondition = doubleOperators.includes(lastInputCharacter) && doubleOperators.includes(character);\n    if (!checkCondition) {\n      setInput(input + character);\n    }\n  };\n\n  const calculationFunction = (inputString) => {\n    const lastInputCharacter = input?.split('').pop();\n    const checkCondition = doubleOperators.includes(lastInputCharacter);\n    if (!checkCondition) {\n      let result = Function(`return ${inputString}`)();\n      setInput(`${result}`);\n\n      const newHistoryRecord = { value: `${inputString}=${result}` };\n      addHistoryRecord(newHistoryRecord);\n    }\n  };\n\n  const clearInput = () => {\n    setInput('');\n  };\n\n  return (\n    <>\n      <div id='container'>\n        <div id='table'>\n          <table id='calculator'>\n            <tbody>\n              <tr>\n                <td colSpan='3' id='calc-result'>{input}</td>\n                <td onClick={clearInput} id='calc-clear'>c</td>\n              </tr>\n              <tr>\n                <td onClick={() => { doubleOperatorCheck(1) }}>1</td>\n                <td onClick={() => { doubleOperatorCheck(2) }}>2</td>\n                <td onClick={() => { doubleOperatorCheck(3) }}>3</td>\n                <td onClick={() => { doubleOperatorCheck('+') }}>+</td>\n              </tr>\n              {/* Other rows */}\n            </tbody>\n          </table>\n        </div>\n        <div id='history-container'>\n          <History addHistoryRecord={addHistoryRecord} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}